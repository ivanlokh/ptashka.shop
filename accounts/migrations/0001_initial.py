# Generated by Django 5.2.6 on 2025-09-20 19:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата народження')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email сповіщення')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='SMS сповіщення')),
                ('newsletter', models.BooleanField(default=True, verbose_name='Розсилка новин')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Створено')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Оновлено')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Користувач',
                'verbose_name_plural': 'Користувачі',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('order', 'Замовлення'), ('payment', 'Платіж'), ('shipping', 'Доставка'), ('promotion', 'Акція'), ('news', 'Новини'), ('system', 'Система')], max_length=20, verbose_name='Тип')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Повідомлення')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('is_email_sent', models.BooleanField(default=False, verbose_name='Email відправлено')),
                ('is_sms_sent', models.BooleanField(default=False, verbose_name='SMS відправлено')),
                ('content_type', models.CharField(blank=True, max_length=100, verbose_name="Тип об'єкта")),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name="ID об'єкта")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Створено')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Користувач')),
            ],
            options={
                'verbose_name': 'Сповіщення',
                'verbose_name_plural': 'Сповіщення',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Чоловік'), ('female', 'Жінка'), ('other', 'Інше')], max_length=10, verbose_name='Стать')),
                ('bio', models.TextField(blank=True, verbose_name='Про себе')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='Місцезнаходження')),
                ('facebook', models.URLField(blank=True, verbose_name='Facebook')),
                ('twitter', models.URLField(blank=True, verbose_name='Twitter')),
                ('instagram', models.URLField(blank=True, verbose_name='Instagram')),
                ('show_email', models.BooleanField(default=False, verbose_name='Показувати email')),
                ('show_phone', models.BooleanField(default=False, verbose_name='Показувати телефон')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Створено')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Оновлено')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Користувач')),
            ],
            options={
                'verbose_name': 'Профіль користувача',
                'verbose_name_plural': 'Профілі користувачів',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, verbose_name='Ключ сесії')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP адреса')),
                ('user_agent', models.TextField(verbose_name='User Agent')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Остання активність')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Створено')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL, verbose_name='Користувач')),
            ],
            options={
                'verbose_name': 'Сесія користувача',
                'verbose_name_plural': 'Сесії користувачів',
                'ordering': ['-last_activity'],
            },
        ),
    ]
