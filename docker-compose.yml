version: '3.9'

services:
  # Django application
  web:
    build:
      context: .
      target: development
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://postgres:postgres@db:5432/ptashka_shop
      - REDIS_URL=redis://redis:6379/1
      - SECRET_KEY=dev-secret-key-change-in-production
    depends_on:
      - db
      - redis
    command: python manage.py runserver 0.0.0.0:8000

  # PostgreSQL database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=ptashka_shop
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Celery worker
  celery:
    build:
      context: .
      target: development
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://postgres:postgres@db:5432/ptashka_shop
      - REDIS_URL=redis://redis:6379/1
      - SECRET_KEY=dev-secret-key-change-in-production
    depends_on:
      - db
      - redis
    command: celery -A ptashka_shop worker --loglevel=info

  # Celery beat scheduler
  celery-beat:
    build:
      context: .
      target: development
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://postgres:postgres@db:5432/ptashka_shop
      - REDIS_URL=redis://redis:6379/1
      - SECRET_KEY=dev-secret-key-change-in-production
    depends_on:
      - db
      - redis
    command: celery -A ptashka_shop beat --loglevel=info

  # Nginx reverse proxy
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
    depends_on:
      - web

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  default:
    name: ptashka_network
